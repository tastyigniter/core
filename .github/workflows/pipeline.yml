name: Core CI Pipeline

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build-assets:
    permissions:
      contents: write
    uses: tastyigniter/workflows/.github/workflows/build-assets.yml@main
    secrets:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  php-code-check:
    name: 'PHP Code Check ${{ matrix.php }}'
    needs: build-assets
    if: ${{ always() && needs.build-assets.result == 'success' }}
    uses: tastyigniter/workflows/.github/workflows/php-code-check.yml@main
    strategy:
      matrix:
        php: [ '8.3', '8.4' ]
    with:
      php-version: ${{ matrix.php }}
  php-tests:
    name: 'PHP Tests ${{ matrix.php }} (Shard ${{ matrix.shard }}/5)'
    needs: php-code-check
    if: ${{ always() && needs.php-code-check.result == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '8.3', '8.4' ]
        shard: [ 1, 2, 3, 4, 5 ]
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testbench
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    env:
      DB_DATABASE: db_test
      DB_USERNAME: root
      DB_PASSWORD: root
    steps:
      - name: Checkout changes
        uses: actions/checkout@v4

      - name: Create MySQL Database
        run: |
          sudo service mysql start
          mysql -u${{ env.DB_USERNAME }} -p${{ env.DB_PASSWORD }} -e "CREATE DATABASE ${{ env.DB_DATABASE }};"

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, xml, mbstring, zip, pdo, sqlite, bcmath, soap, intl, gd
          tools: composer:v2
          coverage: none

      - name: Set composer version to avoid conflicts
        if: github.head_ref != 'master' && github.head_ref != '4.x'
        run: composer config version 4.0.x-dev

      - name: Install composer dependencies
        run: composer update --no-interaction --no-progress

      - name: Remove composer version after use
        if: github.head_ref != 'master' && github.head_ref != '4.x'
        run: composer config --unset version

      - name: Run test suite
        run: vendor/bin/pest --compact --shard ${{ matrix.shard }}/5
